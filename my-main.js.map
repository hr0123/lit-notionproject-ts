{"version":3,"file":"my-main.js","sourceRoot":"","sources":["src/my-main.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;;;;;;AAEH,OAAO,EAAC,UAAU,EAAE,IAAI,EAAE,GAAG,EAAC,MAAM,KAAK,CAAC;AAC1C,OAAO,EAAC,aAAa,EAAC,MAAM,mBAAmB,CAAC;AAEhD;;;;;;GAMG;AAEH,IAAa,MAAM,GAAnB,MAAa,MAAO,SAAQ,UAAU;IAwD3B,MAAM;QACb,OAAO,IAAI,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;KAyBV,CAAC;IACJ,CAAC;CACF,CAAA;AAnFiB,aAAM,GAAG;IACvB,GAAG,CAAA;;;;;;;;;KASF;IACD,GAAG,CAAA;;;;;;;;;;KAUF;IACD,GAAG,CAAA;;;;;;;;;KASF;IACD,GAAG,CAAA;;;;;;;;;;;;;;KAcF;IACD,GAAG,CAAA;;;;;KAKF;CACD,CAAA;AAtDS,MAAM;IADlB,aAAa,CAAC,SAAS,CAAC;GACZ,MAAM,CAoFlB;SApFY,MAAM","sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {LitElement, html, css} from 'lit';\nimport {customElement} from 'lit/decorators.js';\n\n/**\n * An example element.\n *\n * @fires count-changed - Indicates when the count changes\n * @slot - This element has a slot\n * @csspart button - The button\n */\n@customElement('my-main')\nexport class MyMain extends LitElement {\n  static override styles = [\n    css`\n      .wrapper {\n        max-width: 650px;\n        width: 100%;\n        display: flex;\n        flex-direction: column;\n        justify-content: space-between;\n        align-items: flex-start;\n      }\n    `,\n    css`\n      .block {\n        position: relative;\n        /* margin: 0.5rem 0 0.5rem; */\n        /* max-width: 600px; */\n        width: 100%;\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n      }\n    `,\n    css`\n      .drag-icon {\n        width: 20px;\n        height: 20px;\n        cursor: pointer;\n        /* position: relative;\n        right: 17px;\n        bottom: 26px; */\n      }\n    `,\n    css`\n      .input {\n        width: 100%;\n        height: auto;\n        padding: 0.5rem 0.5rem;\n        font-size: 1rem;\n        font-weight: 500;\n        border: 0;\n        border-radius: 0.1em;\n        background-color: white;\n        white-space: pre-wrap;\n        color: rgb(55, 53, 47);\n        outline: none;\n      }\n    `,\n    css`\n      .input:empty:not(:focus):before {\n        content: attr(placeholder);\n        -webkit-text-fill-color: rgba(55, 53, 47, 0.5);\n      }\n    `,\n  ];\n\n  override render() {\n    return html`\n      <div class=\"wrapper\">\n        <div class=\"block\">\n          <img\n            class=\"drag-icon\"\n            src=\"https://img.icons8.com/windows/96/000000/braille.png\"\n          />\n          <div\n            class=\"input\"\n            contenteditable=\"true\"\n            placeholder=\"Type '/' for commands\"\n          ></div>\n        </div>\n        <div class=\"block\">\n          <img\n            class=\"drag-icon\"\n            src=\"https://img.icons8.com/windows/96/000000/braille.png\"\n          />\n          <div\n            class=\"input\"\n            contenteditable=\"true\"\n            placeholder=\"Type '/' for commands\"\n          ></div>\n        </div>\n      </div>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'my-main': MyMain;\n  }\n}\n"]}