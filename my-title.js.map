{"version":3,"file":"my-title.js","sourceRoot":"","sources":["src/my-title.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;;;;;;AAEH,OAAO,EAAC,UAAU,EAAE,IAAI,EAAE,GAAG,EAAC,MAAM,KAAK,CAAC;AAC1C,OAAO,EAAC,aAAa,EAAC,MAAM,mBAAmB,CAAC;AAEhD;;;;;;GAMG;AAEH,IAAa,OAAO,GAApB,MAAa,OAAQ,SAAQ,UAAU;IAwD5B,MAAM;QACb,OAAO,IAAI,CAAA;;;;;;;;;;;uBAWQ,IAAI,CAAC,YAAY;;;KAGnC,CAAC;IACJ,CAAC;IAEO,YAAY;QAClB,QAAQ;IACV,CAAC;CACF,CAAA;AA5EiB,cAAM,GAAG;IACvB,GAAG,CAAA;;;;;;;;;;;KAWF;IACD,GAAG,CAAA;;;;;;;;;KASF;IACD,GAAG,CAAA;;;;;;;KAOF;IACD,GAAG,CAAA;;;;;;;;;;;;;;;KAeF;IACD,GAAG,CAAA;;;;;KAKF;CACD,CAAA;AAtDS,OAAO;IADnB,aAAa,CAAC,UAAU,CAAC;GACb,OAAO,CA6EnB;SA7EY,OAAO","sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {LitElement, html, css} from 'lit';\nimport {customElement} from 'lit/decorators.js';\n\n/**\n * An example element.\n *\n * @fires count-changed - Indicates when the count changes\n * @slot - This element has a slot\n * @csspart button - The button\n */\n@customElement('my-title')\nexport class MyTitle extends LitElement {\n  static override styles = [\n    css`\n      .wrapper {\n        /* margin: 2rem 0 0.5rem; */\n        margin-top: 70px;\n        max-width: 600px;\n        width: 100%;\n        display: flex;\n        flex-direction: column;\n        justify-content: space-between;\n        align-items: flex-start;\n      }\n    `,\n    css`\n      .button-block {\n        position: absolute;\n        display: flex;\n        flex-direction: row;\n        justify-content: space-between;\n        align-items: center;\n        margin-top: 20px;\n      }\n    `,\n    css`\n      .button {\n        color: rgba(55, 53, 47, 0.5);\n        padding-right: 8px;\n        font-size: 14px;\n        cursor: pointer;\n      }\n    `,\n    css`\n      .input {\n        width: 100%;\n        height: auto;\n        /* margin-top: 40px; */\n        margin-top: 50px;\n        font-size: 40px;\n        font-weight: 700;\n        border: 0;\n        border-radius: 0.1em;\n        background-color: white;\n        color: rgb(55, 53, 47);\n        cursor: text;\n        outline: none;\n      }\n    `,\n    css`\n      .input:empty:not(:focus):before {\n        content: attr(placeholder);\n        -webkit-text-fill-color: rgba(55, 53, 47, 0.15);\n      }\n    `,\n  ];\n\n  override render() {\n    return html`\n      <div class=\"wrapper\">\n        <div class=\"button-block\">\n          <div class=\"button\">Add icon</div>\n          <div class=\"button\">Add cover</div>\n          <div class=\"button\">Add comment</div>\n        </div>\n        <div\n          class=\"input\"\n          contenteditable=\"true\"\n          placeholder=\"Untitled\"\n          @mouseover=${this._onMouseOver}\n        ></div>\n      </div>\n    `;\n  }\n\n  private _onMouseOver() {\n    // this.\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'my-title': MyTitle;\n  }\n}\n"]}