{"version":3,"file":"my-text.js","sourceRoot":"","sources":["src/my-text.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {LitElement, html, css} from 'lit';\nimport {customElement, property} from 'lit/decorators.js';\n\nimport './my-menu';\n\n/**\n * An example element.\n *\n * @fires count-changed - Indicates when the count changes\n * @slot - This element has a slot\n * @csspart button - The button\n */\n@customElement('my-text')\nexport class MyText extends LitElement {\n  static override styles = [\n    css`\n      .wrapper {\n        max-width: 650px;\n        width: 100%;\n        display: flex;\n        flex-direction: column;\n        justify-content: space-between;\n        align-items: flex-start;\n      }\n    `,\n    css`\n      .block {\n        position: relative;\n        /* margin: 0.5rem 0 0.5rem; */\n        /* max-width: 600px; */\n        width: 100%;\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n      }\n    `,\n    css`\n      .drag-icon {\n        width: 20px;\n        height: 20px;\n        cursor: pointer;\n        position: absolute;\n        /* padding-left: 10px; */\n        /* right: 17px;\n        bottom: 26px; */\n      }\n    `,\n    css`\n      .main-input {\n        width: 100%;\n        height: auto;\n        /* padding: 0.5rem 0.5rem; */\n        padding: 0.5rem 1.5rem;\n        font-size: 1rem;\n        font-weight: 500;\n        border: 0;\n        border-radius: 0.1em;\n        background-color: white;\n        white-space: pre-wrap;\n        color: rgb(55, 53, 47);\n        outline: none;\n        cursor: text;\n      }\n    `,\n    css`\n      .main-input:empty:before {\n        content: attr(placeholder);\n        -webkit-text-fill-color: rgba(55, 53, 47, 0.5);\n      }\n    `,\n  ];\n\n  @property({type: Boolean})\n  open = false;\n\n  @property({type: Boolean})\n  menuOpen = false;\n\n  override render() {\n    return html`\n      <div class=\"wrapper\">\n        <div class=\"block\">\n          <img\n            class=\"drag-icon\"\n            src=\"https://img.icons8.com/windows/96/000000/braille.png\"\n            ?hidden=${!this.open}\n          />\n          <div\n            class=\"main-input\"\n            contenteditable=\"true\"\n            placeholder=\"Type '/' for commands\"\n            @mouseover=${this._onMouseOver}\n            @mouseout=${this._onMouseOver}\n            @keydown=${this._onKeySlash}\n            @keypress=${this._onKeyEnter}\n          ></div>\n        </div>\n        <my-menu id=\"menuImport\" ?hidden=${!this.menuOpen}></my-menu>\n      </div>\n    `;\n  }\n\n  private async _onMouseOver() {\n    this.open = !this.open;\n    await this.updateComplete;\n    const name = this.open ? 'opened' : 'closed';\n    this.dispatchEvent(new CustomEvent(name, {bubbles: true, composed: true}));\n  }\n\n  private _onKeySlash(e: Event) {\n    // if ((e as InputEvent).data === '/') {\n    if ((e as KeyboardEvent).key === '/') {\n      this.menuOpen = true;\n    } else {\n      this.menuOpen = false;\n    }\n  }\n\n  private _onKeyEnter(e: Event) {\n    if ((e as KeyboardEvent).key === 'Enter') {\n      console.log('ENTER!', e);\n      const newBlock = document.createElement('div');\n      newBlock.setAttribute('class', 'block');\n      const newIcon = document.createElement('img');\n      newIcon.setAttribute('class', 'drag-icon');\n      newIcon.setAttribute(\n        'src',\n        'https://img.icons8.com/windows/96/000000/braille.png'\n      );\n      newIcon.setAttribute('?hidden', `${!this.open}`);\n      const newInput = document.createElement('div');\n      newInput.setAttribute('class', 'input');\n      newInput.setAttribute('contenteditable', 'true');\n      newInput.setAttribute('placeholder', \"Type '/' for commands\");\n      newInput.setAttribute('@mouseover', `${this._onMouseOver}`);\n      newInput.setAttribute('@mouseout', `${this._onMouseOver}`);\n      newInput.setAttribute('@keydown', `${this._onKeySlash}`);\n      newInput.setAttribute('@keypress', `${this._onKeyEnter}`);\n      newBlock.appendChild(newIcon);\n      newBlock.appendChild(newInput);\n      const wrapper = document.getElementsByClassName('.wrapper');\n      wrapper[0].appendChild(newBlock);\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'my-text': MyText;\n  }\n}\n"]}